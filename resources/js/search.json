[[{"i":"rand-sec-projects-and-embedded-dev","l":"\uD83C\uDFE0 Rand Sec Projects and Embedded Dev","p":["WIP \uD83D\uDC4D"]}],[{"l":"1. Vehicle to Home Bi-Directional Hacking","p":["Nissan Leaf domestic bi-directional charger - DALL·E 3"]},{"i":"project-overview","l":"\uD83C\uDF1F Project Overview","p":["The BeagleBone-V2H project focused on the reverse engineering and experimentation of an Indra Vehicle to Grid (V2G) bi-directional charging system. The aim was to replicate the functionality of the existing system with local control only. This involved building a completely new BeagleBone firmware image, writing custom kernel overlays for hardware support, and developing a bespoke application in Rust. Additionally, a SvelteKit webUI was prototyped to provide local user control through a websockets interface. Upon completing a proof of concept, a load matching Vehicle to Home (V2H) feature was added so that the connected electric vehicle could safely power an entire home and charge from excess solar automatically."]},{"i":"stages","l":"\uD83D\uDD11 Stages","p":["Dumped eMMC image of existing firmware, extracted configs, and decompiled main executable","Ghidra for reverse engineering existing C++ CHAdeMO V2G firmware","Extracted boot and runtime logs through TTL UART","Retained access to hardware components using bespoke Linux kernel overlays","Designed custom libraries for EV DC rapid charging CHAdeMO CAN, PRE 6kW bi-directional CAN charger, STMicro STPM3x SPI energy monitor, Analog Devices AD7237 SPI ADC, and Philips PCA95xx I2C GPIO extender","Developed a ground-up replacement application in Rust with the aim of cloud disconnection and local control only.","Conducted experiments on adapting the CHAdeMO interface using pyPLC to enable CCS for EV charging using GreenPHY for protocol communication."]},{"i":"technical-stack","l":"\uD83D\uDEE0️ Technical Stack","p":["Rust with Tokio async runtime.","SQLx for database interactions.","Async SocketCAN for CAN network communication.","I2C and SPI for interfacing with STMicro energy monitor, Analog Devices ADC, and Philips GPIO panel interface.","Tokio Tungstenite websocket API.","SvelteKit web interface.","SQLite3 for local events recording and datalogging.","JSON based charging/discharging scheduler.","Existing BeagleBone Green- Texas Instruments (Ti) System-on-Chip (SoC).","Linux Debian 10- SD boot."]}],[{"l":"2. University Projects"},{"l":"Final Thesis","p":["Agile Development and Experimentation:","Automate data collection through VT submissions and analyze it using statistical software to guide further development","Automated Build Script Implementation:","Collect and analyze sample data from VT to refine the malware attributes and binaries.","Compare and contrast the findings from each iteration to identify the most effective evasion strategies","Compare and Select Malware Attributes:","Create and test an automated build script capable of generating unique malware binaries with various compiler options.","Data Analysis from VirusTotal (VT):","Design and develop four functionally distinct malware binaries in Rust and C++","Develop evasion improvements for Rust-based malware","Develop Malware Binaries:","Employ Agile methodology to iterate the development process, experimenting with source code modifications to enhance evasion techniques.","Evaluate a range of malware attributes to determine their viability and effectiveness","Findings Comparison:","Implement a rigorous testing framework to assess the effectiveness of various evasion techniques","Rust to generate more evasive malware than C++","The project commences in January 2024 and concludes with the submission of the thesis in April 2024."]},{"l":"Forensic Tools","p":["Modification of Syvaidya's OpenStego steganography tool.","Added command line feature to perform dictionary attacks on steganography images as part of a CompSci forensics module"]}]]